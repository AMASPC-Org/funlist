generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model health_check {
  id         Int       @id @default(autoincrement())
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
}

// Generic scores table for multi-brand scoring systems
model Score {
  id           String   @id @default(uuid())
  brand        String // funlist, businesscalendar
  system       String // Funalytics, ConnectScore, Elevate
  entityType   String   @map("entity_type") // event, venue, experience
  entityId     Int      @map("entity_id")
  overallScore Float    @map("overall_score") @db.Real
  dimensions   Json // JSON object with dynamic dimension scores
  reasoning    String?  @db.VarChar(500)
  status       String   @default("completed") // pending, computing, completed, failed
  computedAt   DateTime @default(now()) @map("computed_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([brand, system, entityType, entityId, computedAt])
  @@index([brand, system, entityType, entityId])
  @@index([computedAt(sort: Desc)])
  @@map("scores")
}
