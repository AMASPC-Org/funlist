generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id            Int        @id @default(autoincrement())
  title         String
  description   String?
  startTime     DateTime
  endTime       DateTime?
  location      String?
  city          String?
  state         String?
  zipCode       String?
  latitude      Float?
  longitude     Float?
  category      String?
  organizerId   Int?
  venueId       Int?
  status        String?    @default("pending")
  created_at    DateTime?  @default(now())
  updated_at    DateTime?  @default(now())
  
  // Relations
  organizer     User?      @relation(fields: [organizerId], references: [id])
  venue         Venue?     @relation(fields: [venueId], references: [id])
  funalytics    FunalyticsScore[]
  
  @@map("events")
}

model User {
  id            Int      @id @default(autoincrement())
  first_name    String?
  last_name     String?
  company_name  String?
  email         String   @unique
  password_hash String?
  phone         String?
  is_organizer  Boolean? @default(false)
  is_sponsor    Boolean? @default(false)
  is_vendor     Boolean? @default(false)
  is_admin      Boolean? @default(false)
  is_active     Boolean? @default(true)
  created_at    DateTime? @default(now())
  updated_at    DateTime? @default(now())
  
  // Relations
  events        Event[]
  
  @@map("users")
}

model Venue {
  id              Int      @id @default(autoincrement())
  name            String?
  address         String?
  city            String?
  state           String?
  zip_code        String?
  latitude        Float?
  longitude       Float?
  capacity        Int?
  venue_type_id   Int?
  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())
  
  // Relations
  events          Event[]
  
  @@map("venues")
}

model FunalyticsScore {
  id            String    @id @default(dbgenerated("gen_random_uuid()"))
  eventId       Int       @map("event_id")
  communityVibe Int?      @map("community_vibe")
  familyFun     Int?      @map("family_fun")
  overallScore  Int?      @map("overall_score")
  reasoning     String?
  computedAt    DateTime  @default(now()) @map("computed_at")
  
  // Relations
  event         Event     @relation(fields: [eventId], references: [id])
  
  @@map("funalytics_scores")
  @@index([eventId, computedAt(sort: Desc)])
}