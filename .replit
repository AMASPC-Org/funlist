modules = ["python-3.11", "nodejs-20"]

[nix]
channel = "stable-24_05"
packages = ["cacert", "glibcLocales", "libxcrypt", "pkg-config", "xsimd"]

[deployment]
run = ["sh", "-c", "python main.py"]

[env]
PORT = "3000"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3001

[[ports]]
localPort = 5000
externalPort = 3001

[[ports]]
localPort = 5003
externalPort = 3003

[[ports]]
localPort = 5004
externalPort = 4200

[[ports]]
localPort = 5005
externalPort = 5173

[[ports]]
localPort = 5006
externalPort = 6000

[[ports]]
localPort = 5007
externalPort = 6800

[[ports]]
localPort = 5008
externalPort = 8000

[[ports]]
localPort = 5009
externalPort = 8008

[[ports]]
localPort = 5010
externalPort = 8099

[[ports]]
localPort = 5011
externalPort = 9000

[[ports]]
localPort = 8080
externalPort = 8080

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8082
externalPort = 3000

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Run"
author = 36270944

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Flask Server (80)"
author = 36270944
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -c \"from app import create_app; app = create_app(); app.run(host='0.0.0.0', port=80)\""

[[workflows.workflow]]
name = "Flask Server (3000)"
author = 36270944
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Flask Server (5000)"
author = 36270944
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Start App"
author = 36270944
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Run App"
author = 36270944
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Central API"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Web Server"

[[workflows.workflow]]
name = "Central API"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/central-api && export DATABASE_URL=\"${DATABASE_URL}/neondb?sslmode=require\" && node run.js"
waitForPort = 3001

[[workflows.workflow]]
name = "Web Server"
author = "agent"

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[agent]
expertMode = true
integrations = ["python_openai:1.0.0", "python_anthropic:1.0.0", "python_gemini:1.0.0", "flask_google_oauth:1.0.0"]
