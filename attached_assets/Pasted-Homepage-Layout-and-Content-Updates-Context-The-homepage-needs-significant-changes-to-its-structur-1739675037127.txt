Homepage Layout and Content Updates
Context: The homepage needs significant changes to its structure and content, as discussed in the conversation. The map should be removed from the homepage.
Action:
Remove Map: Completely remove any map-related HTML and JavaScript from templates/home.html.
Hero Section:
H1: "Find the Best Events Near You â€“ Rated for Fun!"
H2/Subtext: "Rated for Fun. Picked for You!"
Main CTA Button: "ðŸ”” Get My Weekly FunList" (centered, prominent, high-contrast color - e.g., yellow, orange, or white). This button should link to an email signup form (or a page with the form). Do not use a modal for the initial signup. Keep the user on the homepage.
Map/List View Toggle: Below the main CTA, add smaller, pill-shaped buttons (or a toggle switch) for "Map View" (links to /map) and "List View" (links to /events). These should be styled differently from the main CTA, so they are clearly secondary actions.


Three Feature Boxes (Below Hero):
Box 1: AI-Driven Recommendations
Title: "AI-Driven Recommendations"
Text: "Our AI scans thousands of events to find the perfect match for your interestsâ€”so you always get the best experience."


Box 2: How the Fun Rating System Works
Title: "How the Fun Rating System Works"
Text: "Each event is rated on a 1-5 scale, with half-point precision, based on its activities, engagement level, and attendee experience. More attractions = a higher rating!"
"Learn More" Button: Below the text, add a button that says "Learn More". This button should use JavaScript to smoothly scroll the user down to the detailed "How the Fun Rating System Works" section (see below).


Box 3: Your Personal Fun Assistant
Title: "Your Personal Fun Assistant"
Text: "Tell us what you love â†’ Your Fun Assistant delivers top picks weekly!"
"Learn More" Button: Below the text, add a button that says "Learn More". This button should use JavaScript to smoothly scroll the user down to the detailed "How the Fun Assistant Works" section (see below).


Styling: Ensure consistent styling and spacing between these boxes. Use the existing CSS classes (e.g., card, card-body, card-title) to maintain a uniform look.


"How the Fun Rating System Works" Section (Below the Fold):
H2 Title: "How the Fun Rating System Works"
Intro Text: "Every event is rated on a 1-5 scale, with half-point precision, based on its activities, engagement level, and attendee experience. More attractions = a higher rating!"
Visual Breakdown: Create a visual representation of the 1-5 rating scale (e.g., stars, progress bar, icons). Clearly show what each rating level represents (e.g., 1 star = Basic Event, 5 stars = Full-Scale Experience).
Example Ratings: Provide a short list of example ratings and what they typically mean (you can reuse the examples from previous discussions).
FAQ Section: Use an accordion component (as currently implemented) for the FAQ. The questions are:
Who assigns Fun Ratings?
Can ratings be adjusted?
What makes an event highly rated?


CTA:
Heading: "Planning an Event?" (bold)
Button: "Submit Your Event" (links to /add-event)




"How the Fun Assistant Works" Section (Below the Fold)
H2 Title: "How the Fun Assistant Works"
Intro Text: Personalized Event Discovery Made Easy
How it Works
Choose your interests (Family, Singles, etc)
Get weekly Recommendations
Adjust Anytime


Why Use it?
Saves Time
Tailored Just for You
Completely Free




CTA Button: "Sign Up & Get Your Fun Assistant!" (links to the user registration page)
Sticky Signup Button (Below the Fold):
Create a sticky/floating button labeled "ðŸ”” Get My Weekly FunList".
This button should appear only after the user scrolls down past a certain point (e.g., 500px).
The button should have a close (X) button. If the user closes it, it should not reappear during the current session (use sessionStorage to track this).
The button should not be displayed if the user is logged in.


Footer:
Add social media icons/links to Facebook, Twitter, Instagram, and TikTok. Remove LinkedIn.


Styling (CSS):
Consistent Spacing: Ensure consistent spacing between sections, elements within sections, and around buttons. The previous inconsistencies should be resolved.
Mobile Responsiveness: All elements should be responsive and display correctly on all screen sizes. Titles in the three feature boxes should be left-aligned on desktop and centered on mobile. Use media queries in your CSS.
Border Radius: Use a consistent border-radius (e.g., 8px) across all UI elements (buttons, cards, map container, etc.) for a unified look.
Button Visibility: Make the primary CTA button ("Get My Weekly FunList") stand out with a contrasting background color.




3. Event Submission Form Updates (
"Who Should Attend?" Field:
Add a new field to the event submission form labeled "Who Should Attend?".
This should be a multi-select field (checkboxes or a multi-select dropdown).
Options: Family, Parents, Adults (18+), 21+, Singles, Professionals, Seniors (55+).


Fun Rating Logic:
Allow event organizers to select any Fun Rating (1-5, with 0.5 increments). Do not restrict the rating based on the number of attractions.
Confirmation Popup: When an organizer selects a rating, display a confirmation popup. The content of the popup should dynamically reflect the chosen rating. For example:
If they choose 4.5, the popup should say something like: "Are you sure your event is a 4.5? A 4.5-rated event typically includes: Live Music, Car Show, Beer Garden, Food Tasting, VIP Lounge. Does your event meet this level of engagement?" [Yes, Confirm] / [No, Let Me Adjust]
If they choose 2.0, the popup should say something like: "Are you sure your event is a 2.0? A 2.0-rated event typically includes: A live DJ, A Beer Garden. If your event offers more activities, consider increasing the rating!" [Yes, Confirm] / [No, Let Me Adjust]


The confirmation popup is a warning, not a restriction. The organizer should be able to confirm their chosen rating even if it doesn't perfectly match the suggested criteria.


4. User-Based Rating Flagging (Pre-Event)
"Report Rating Mismatch" Button: Add a button/link to each event listing (both on the map view and the list view) that allows users to report a potentially inaccurate Fun Rating before the event occurs.
Reporting Popup: When clicked, this button should display a popup/modal where the user can provide a short explanation of why they think the rating is inaccurate.
Flagging Threshold: If an event receives X number of reports (you decide the threshold - 5 might be a good starting point), the following should happen:
The event should be flagged in the database (add a new field to your events table, something like rating_flagged).
An email notification should be sent to the admin (you) to review the event.
A notification should also be sent to the event organizer, informing them of the reports and encouraging them to review their event details and rating.


5. Post-Event User Rating
Rating Submission: Allow users to submit a rating after an event has begun.
No follow up email: Instead, have the ability to rate right on the site.
6. Event Views Tracking
Add  Add a new integer field called event_views to your events table in the database. Default this to 0.
Increment on Detail Page View: Every time a user views the event detail page (/event/{id}), increment the event_views counter for that event. Do not increment the counter on the map view or list view â€“ only on the detail page.
Display View Count: Display the event_views count on both the event listing cards and the event detail page.
7. Trending Events (Homepage Section)
Create a new section on the homepage, below the fold, titled "ðŸ”¥ Trending Events Near You".
Implement the trending algorithm: Use the provided SQL query (adapted for your specific database) to fetch the top 10 trending events:

SELECT * FROM events
WHERE event_start > NOW() -- Show only upcoming events
AND ST_Distance_Sphere(point(event_lat, event_lng), point(:user_lat, :user_lng)) < 50000 -- 50km radius
ORDER BY (event_views * 0.6) + (event_clicks * 0.3) + (event_interests * 0.5) DESC
LIMIT 10;
content_copy
download
Use code with caution.SQL
You'll need to adapt this query to your specific database schema and potentially use different functions for calculating distance (depending on your database).
You'll need to replace :user_lat and :user_lng with the user's actual coordinates (or a default location if geolocation is unavailable).
You can adjust the weighting factors (0.6, 0.3, 0.5) to fine-tune the algorithm.


Display the trending events in a visually appealing way (e.g., a grid or list). Include the event title, date, location, Fun Rating, and a link to the event details page.
8. Remove Wouter Navigation, Replace with Flask Navigation
Make sure to remove all use of useNavigate, and implement navigation using Flask.
General Notes:
Mobile Responsiveness: Ensure all changes are fully responsive and work correctly on mobile devices.
Error Handling: Implement proper error handling for all database operations and API calls.
Testing: Thoroughly test all new functionality.
Prioritize: Focus on the Webview and map issues first. Then move on to the homepage content and layout, then the event submission form, and finally the trending events section.
This prompt provides a comprehensive and prioritized set of instructions. It addresses all the issues raised in the conversation and incorporates best practices for SEO, UX, and maintainability. By following these steps, you should have a much more functional and user-friendly website. Remember to provide me with the complete, updated code for each file you modify.

